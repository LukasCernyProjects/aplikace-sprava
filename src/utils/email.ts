import nodemailer from "nodemailer";

// üì¶ SMTP konfigurace
const transporter = nodemailer.createTransport({
  host: process.env.EMAIL_HOST,
  port: parseInt(process.env.EMAIL_PORT || "587", 10),
  secure: false, // STARTTLS
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS,
  },
});

// ‚úÖ Ovƒõ≈ôen√≠ spojen√≠ p≈ôi startu aplikace
export async function verifyConnection() {
  try {
    await transporter.verify();
    console.log("‚úÖ SMTP p≈ôipojen√≠ nav√°z√°no.");
  } catch (err) {
    console.error("‚ùå SMTP p≈ôipojen√≠ selhalo:", err);
  }
}

// üì¨ Obecn√° funkce pro odes√≠l√°n√≠ e-mail≈Ø
export async function sendEmail({
  to,
  subject,
  text,
  html,
}: {
  to: string;
  subject: string;
  text: string;
  html?: string;
}) {
  try {
    const info = await transporter.sendMail({
      from: `"Spr√°va Byt≈Ø" <${process.env.EMAIL_USER}>`,
      to,
      subject,
      text,
      html,
    });

    // Pokud pou≈æ√≠v√°≈° Ethereal, zobraz URL pro n√°hled
    const previewUrl = nodemailer.getTestMessageUrl(info);
    if (previewUrl) {
      console.log("üì§ N√°hled e-mailu:", previewUrl);
    }
  } catch (error) {
    console.error("‚ùå Chyba p≈ôi odes√≠l√°n√≠ e-mailu:", error);
    throw new Error("Nepoda≈ôilo se odeslat e-mail.");
  }
}

// üéØ Specifick√° funkce pro odesl√°n√≠ e-mailu pro reset hesla
export async function sendResetEmail(to: string, resetLink: string) {
  const subject = "Obnoven√≠ hesla - Spr√°va Byt≈Ø";
  const text = `Odkaz pro obnoven√≠ hesla: ${resetLink}`;
  const html = `
    <p>Po≈æ√°dali jste o obnoven√≠ hesla.</p>
    <p>Kliknƒõte na n√°sleduj√≠c√≠ odkaz:</p>
    <a href="${resetLink}">${resetLink}</a>
    <p>Pokud jste o obnoven√≠ nepo≈æ√°dali, tento e-mail ignorujte.</p>
  `;

  await sendEmail({ to, subject, text, html });
}
